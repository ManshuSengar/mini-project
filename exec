import { Accordion, AccordionDetails, AccordionSummary, Divider, FormControl, Grid, InputLabel, MenuItem, Select, Table, TableBody, TableCell, TableHead, TableRow, TextField, Button } from "@mui/material"
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import React, { SyntheticEvent, useCallback, useEffect, useRef, useState } from "react";
import { useAddExecutiveSummaryMutation, useGetExecutiveSummaryByIdQuery, useUpdateExecutiveSummaryMutation } from "../../../features/appraisal/executiveSummaryApi";
import { Formik, Form, useFormikContext } from "formik";
import { styled } from "@mui/material/styles";
import { TextAreaField } from "../../../components/framework/TextAreaAuto";
import { DropDownField } from "../../../components/framework/DropDownField";
import * as Yup from "yup";
import { TextBoxField } from "../../../components/framework/TextBoxField"
import { debounce } from 'lodash';
import AutoSave from "../../../components/framework/AutoSave";
import FacilityDetails from "./FacilityDetails";




const ExecutiveSummery = ({ userData }: any) => {
  const [expanded, setExpanded] = React.useState('');
  const textRef2 = useRef<any>();
  const textRef1 = useRef<any>();
  const textRef3 = useRef<any>();
  const textRef4 = useRef<any>();
  const textRef5 = useRef<any>();
  const textRef6 = useRef<any>();
  const onOpenChange = (panel: any) => (event: React.SyntheticEvent, isExpanded: any) => {
    setExpanded(isExpanded ? panel : false);
  };

  const [addExecutiveSummary, response] = useAddExecutiveSummaryMutation();
  const [errorMessage, setErrorMessage] = useState<any>("");
  const [updateExecutiveSummary, updateResponse] = useUpdateExecutiveSummaryMutation();

  const [id, setId] = useState<number>(userData?.id);
  const { data: executiveData, isLoading, isFetching } = useGetExecutiveSummaryByIdQuery(12345);

  const initialValues = {
    applId: "12345",
    nbfcName: "Test User",
    pastAssociation: '',
    briefBackground: '',
    promotor: '',
    extRating: '',
    ramRatingGrade: '',
    internalScore: '',
    productOffered: '',
    internalRatingScore: ''
  };


  const validationSchema = Yup.object().shape({
    nbfcName: Yup.string().required("Name of Borrower is required"),
    // pastAssociation: Yup.string().required("Nature of Business is required"),
  });


  const onChangeHandler = function (e: SyntheticEvent, refName: any) {
    const target = e.target as HTMLTextAreaElement;
    refName.current.style.height = "60px";
    refName.current.style.height = `${target.scrollHeight}px`;
  };
  const handleSubmit = async (values: any) => {
    try {
      await updateExecutiveSummary(values).unwrap();
      console.log("updateResponse--> ", updateResponse);
    } catch (err) {
      console.error("Error saving data:", err);
    }
  };
  if (isLoading) return <h6>Loading... </h6>

  return (
    <>
      <div className='custome-form'>
        <div className='custome-form'>
          <div className='custome-form'>
            <Formik
              initialValues={executiveData ? { ...executiveData, nbfcName: "Test User" } : initialValues}
              onSubmit={handleSubmit}
              validationSchema={validationSchema}
              validateOnChange={false}
              validateOnBlur={true}
            // enableReinitialize={true}
            >
              {({ values, setFieldValue, handleChange }) => {
                return (
                  <Form>
                    <AutoSave debounceMs={1000} />
                    <Grid spacing={2} padding={4} container className='form-grid'>
                      <Grid item xs={12} sm={6} md={6} lg={6}>
                        <TextBoxField
                          label="Name of the NBFC"
                          name="nbfcName"
                        />
                      </Grid>
                      <Grid item xs={12} sm={6} md={6} lg={6}>
                        <FormControl fullWidth>
                          <InputLabel className="select-label" id="eligibility">Past association with SIDBI</InputLabel>
                          <Select
                            labelId="eligibility"
                            id="pastAssociate"
                            label="Past association with SIDBI"
                            size="small"
                            value={values?.pastAssociation}
                            name="pastAssociation"
                            onChange={handleChange}
                          >
                            <MenuItem value="New to Business">New to Business</MenuItem>
                            <MenuItem value="Existing to Business">Existing to Business</MenuItem>
                            <MenuItem value="Past to Business">New to Business</MenuItem>
                          </Select>
                        </FormControl>
                      </Grid>

                      <Grid item xs={12} sm={12} md={12} lg={12}>
                        <TextAreaField
                          label="Brief background of NBFC/NBFC-MFI"
                          name="briefBackground"
                        />
                      </Grid>
                      <Grid item xs={12} sm={6} md={6} lg={6}>
                        <TextAreaField label="Promoter" name="promotor" />
                      </Grid>
                      <Grid item xs={12} sm={6} md={6} lg={6}>
                        <TextAreaField label="External rating detail" name="extRating" />
                      </Grid>
                      <Grid item xs={12} sm={12} md={12} lg={12}>
                        <Divider className='my-1' textAlign="left">
                          <b>Internal Rating Details </b>
                        </Divider>
                      </Grid>
                      <Grid item xs={12} sm={6} md={6} lg={6} className="pt-0">
                        <TextBoxField
                          label="Internal Score"
                          name="internalRatingScore"
                        />
                      </Grid>
                      <Grid item xs={12} sm={6} md={6} lg={6} className="pt-0">
                        <TextBoxField
                          label="RAM Rating Grade"
                          name="ramRatingGrade"
                        />
                      </Grid>
                      <Grid item xs={12} sm={12} md={12} lg={12}>
                        <Divider className='my-1' textAlign="left">
                          <b>Product offered</b>
                        </Divider>
                      </Grid>
                      <Grid item xs={12} sm={12} md={12} lg={12} className="pt-0">
                        <TextAreaField
                          label="Product offered"
                          name="productOffered"
                        />
                      </Grid>
                      {/* <Grid item xs={12} textAlign="right">
                        <Button type="submit" size="small"
                          className="text-capitalize" variant="contained" color="primary">
                          Save
                        </Button>
                      </Grid> */}
                    </Grid>
                  </Form>
                );
              }}
            </Formik>
          </div>
        </div>
        <Accordion className='custome-accordian mt-3'
          expanded={expanded === 'panel1'} onChange={onOpenChange('panel1')}>
          <AccordionSummary
            expandIcon={<ExpandMoreIcon />}
            aria-controls="panel1-content"
            id="panel1-header"
          >
            Summary of Financial Performance â€“  (` crore)
          </AccordionSummary>
          <AccordionDetails>
            <Grid
              spacing={1}
              padding={2}
              container
              className='form-grid'
            >
              <Grid item xs={12} sm={6} md={6} lg={6}>
                <div className="wrap-inner-table m-0">
                  <Table aria-label="simple table">
                    <TableHead>
                      <TableRow>
                        <TableCell sx={{ width: 40 }}><b>Particulars (Rs Cr)</b></TableCell>
                        <TableCell sx={{ width: 20 }}><b>Latest Fiscal</b></TableCell>
                        <TableCell sx={{ width: 20 }}><b>Latest quarter</b></TableCell>
                      </TableRow>
                    </TableHead>
                    <TableBody>
                      <TableRow>
                        <TableCell>
                          AUM
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest quarter" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell>
                          NOF
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest quarter" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell>
                          CRAR
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest quarter" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell>
                          Tier I
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest quarter" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                      </TableRow>
                    </TableBody>
                  </Table>
                </div>
              </Grid>
              <Grid item xs={12} sm={6} md={6} lg={6}>
                <div className="wrap-inner-table m-0">
                  <Table aria-label="simple table">
                    <TableHead>
                      <TableRow>
                        <TableCell sx={{ width: 40 }}><b>Particulars (Rs Cr)</b></TableCell>
                        <TableCell sx={{ width: 50 }}><b>Latest Fiscal</b></TableCell>
                        <TableCell sx={{ width: 50 }}><b>Latest quarter</b></TableCell>
                      </TableRow>
                    </TableHead>
                    <TableBody>
                      <TableRow>
                        <TableCell>
                          Leverage
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          9,047
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest quarter" type="text" />
                          </FormControl> */}
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell>
                          GNPA (%) (Gross Stage 3)
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Quarte" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                      </TableRow>
                      <TableRow>
                        <TableCell>
                          NNPA (%)
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Fiscal" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                        <TableCell>
                          {/* <FormControl fullWidth>
                            <TextField size="small" placeholder="Latest Quarte" type="text" />
                          </FormControl> */}
                          9,047
                        </TableCell>
                      </TableRow>
                    </TableBody>
                  </Table>
                </div>
              </Grid>
            </Grid>
            {/* <Grid
              spacing={2}
              padding={4}
              container
              className='form-grid'
            >
              <Grid item xs={12} sm={6} md={6} lg={6}>
                <FormControl fullWidth>
                  <TextField label="Internal rating details" size="small" />
                </FormControl>
              </Grid>
              <Grid item xs={12} sm={6} md={6} lg={6}>
                <FormControl fullWidth>
                  <TextField label="Proposal for sanction of term loan of(Rs Cr.)" size="small" />
                </FormControl>
              </Grid>
            </Grid> */}
          </AccordionDetails>
        </Accordion>

        <Accordion className='custome-accordian'
          expanded={expanded === 'panel2'} onChange={onOpenChange('panel2')}>
          <AccordionSummary
            expandIcon={<ExpandMoreIcon />}
            aria-controls="panel2-content"
            id="panel2-header"
          >
            Facility Details
          </AccordionSummary>
          <AccordionDetails>
            <FacilityDetails />
          </AccordionDetails>
        </Accordion>
      </div>
    </>
  )
}
export default ExecutiveSummery;



import { FormControl, Table, TableBody, TableCell, TableHead, TableRow, TextField } from "@mui/material";
import { useEffect } from "react";

const CompliancePosition = () => {

  useEffect(() => {
  }, [])

  return (
    <>
      <div className="wrap-inner-table custome-form">
        <Table sx={{ minWidth: 650 }} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell><b>Compliance</b> </TableCell>
              <TableCell><b>Comments</b></TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            <TableRow>
              <TableCell>
                FEMA / FCRA guidelines, as applicable, in case of foreign investment / funding / grants
              </TableCell>
              <TableCell>
                <FormControl fullWidth>
                  <TextField placeholder="Complied" size="small" type="text" />
                </FormControl>
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell>
                All applicable RBI guidelines
              </TableCell>
              <TableCell>
                <FormControl fullWidth>
                  <TextField placeholder="Complied" size="small" type="text" />
                </FormControl>
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell>
                All applicable SEBI guidelines
              </TableCell>
              <TableCell>
                <FormControl fullWidth>
                  <TextField placeholder="Complied" size="small" type="text" />
                </FormControl>
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell>
                PCA framework
              </TableCell>
              <TableCell>
                <FormControl fullWidth>
                  <TextField placeholder="Complied" size="small" type="text" />
                </FormControl>
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell>
                GST filing
              </TableCell>
              <TableCell>
                <FormControl fullWidth>
                  <TextField placeholder="No observations" size="small" type="text" />
                </FormControl>
              </TableCell>
            </TableRow>
          </TableBody>
        </Table>
      </div>
    </>
  )
}

export default CompliancePosition;

request body {
  "applId": "12345",
  "fcmaFcraGuide": "string",
  "rbiGuideline": "string",
  "sebiGuideline": "string",
  "pcaFramework": "string",
  "gstFilling": "string",
  "saveStatus": "string"
}
