import { FormControl, Table, TableBody, TableCell, TableHead, TableRow, TextField } from "@mui/material";
import { SyntheticEvent, useEffect, useRef } from "react";

const QuantumAssistance = () => {
  const textRef1 = useRef<any>();
  const textRef2 = useRef<any>();
  const textRef3 = useRef<any>();
  const textRef4 = useRef<any>();
  const textRef5 = useRef<any>();
  const textRef6 = useRef<any>();
  const textRef7 = useRef<any>();
  const textRef8 = useRef<any>();
  const textRef9 = useRef<any>();

  const onChangeHandler = function (e: SyntheticEvent, refName: any) {
    const target = e.target as HTMLTextAreaElement;
    refName.current.style.height = "60px";
    refName.current.style.height = `${target.scrollHeight}px`;
  };

  useEffect(() => {
    textRef1.current.style.height = "60px";
    textRef2.current.style.height = "60px";
    textRef3.current.style.height = "60px";
    textRef4.current.style.height = "60px";
    textRef5.current.style.height = "60px";
    textRef6.current.style.height = "60px";
    textRef7.current.style.height = "60px";
    textRef8.current.style.height = "60px";
    textRef9.current.style.height = "60px";
  }, [])

  return (
    <>
      <div className="wrap-accordian custome-form">
        <div className="wrap-inner-table">
          <Table sx={{ minWidth: 650 }} aria-label="simple table">
            <TableHead>
              <TableRow>
                <TableCell sx={{ minWidth: 50 }}><b>Sr. No.</b></TableCell>
                <TableCell><b>Particulars</b></TableCell>
                <TableCell sx={{ minWidth: 200 }}><b>Amount(Rs. Cr)</b></TableCell>
                <TableCell sx={{ minWidth: 300 }}><b>Comments</b></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>
                  1
                </TableCell>
                <TableCell>
                  Max Permissible exposure
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef1}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef1)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  2
                </TableCell>
                <TableCell>
                  Maximum permissible exposure under the scheme, if any
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef2}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef2)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  3
                </TableCell>
                <TableCell>
                  Existing Exposure, if any
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef3}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef3)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  4
                </TableCell>
                <TableCell>
                  Headroom Available (lesser of ‘1 and 2’ – 3)
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef4}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef4)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  5
                </TableCell>
                <TableCell>
                  Permissible exposure as per Lender position
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef5}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef5)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  6
                </TableCell>
                <TableCell>
                  Gap Assessment as per Buss. Plan
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef6}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef6)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  7
                </TableCell>
                <TableCell>
                  Amount Eligible [lower of 4, 5 & 6]
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef7}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef7)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  8
                </TableCell>
                <TableCell>
                  Amount requested by company
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef8}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef8)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell>
                  9
                </TableCell>
                <TableCell>
                  Amount Recommended
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <TextField placeholder="Amount(Rs. Cr)" size="small" type="text" />
                  </FormControl>
                </TableCell>
                <TableCell>
                  <FormControl fullWidth>
                    <textarea
                      placeholder="Comments"
                      ref={textRef9}
                      className="text-area-box"
                      onChange={(event: any) => onChangeHandler(event, textRef9)}
                    />
                  </FormControl>
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </div>
      </div>
    </>
  )
}

export default QuantumAssistance;

import { createApi } from "@reduxjs/toolkit/query/react";
import { crudApiTemplate, customBaseQuery } from "../../app/commonApi";

const entity = "appr/quantumAssist";
const path = `quantumAssistApi`;
const tags = [entity];

export const quantumAssistApi = createApi({
    reducerPath: path,
    baseQuery: customBaseQuery,
    tagTypes: tags,
    endpoints: (builder) => ({
        addQuantumAssist: builder.mutation<any, any>({
            query: (body) => crudApiTemplate(entity).addItem(body),
            invalidatesTags: tags,
        }),
        getQuantumAssistById: builder.query<any, number>({
            query: (id) => crudApiTemplate(entity).getItem(12345),
            transformResponse: (response: any) => {
                return {
                    quantumAssists: response
                }
            },
            providesTags: tags,
        }),
        updateQuantumAssist: builder.mutation<any, any>({
            query: (body) => crudApiTemplate(entity).updateItem(body),
            invalidatesTags: tags,
        }),
    }),
});

export const {
    useAddQuantumAssistMutation,
    useGetQuantumAssistByIdQuery,
    useUpdateQuantumAssistMutation
} = quantumAssistApi;

import { FormControl, Table, TableBody, TableCell, TableHead, TableRow, TextField } from "@mui/material";
import { useEffect, useState } from "react";
import { useAddDueDeligenceOtherMutation, useGetDueDeligenceOtherByIdQuery, useUpdateDueDeligenceOtherMutation } from "../../../features/due-diligence/dueDeligenceApi";
import { Form, Formik } from "formik";
import { initialValues, validationSchema } from "../../../models/appraisal/dueDeligenceOther";
import { TextBoxField } from "../../../components/framework/TextBoxField";
import AutoSave from "../../../components/framework/AutoSave";

const DueDiligenceOther = ({userData} :any) => {

  const[addDueDeligenceother , addResponse] = useAddDueDeligenceOtherMutation();
  const[updateDueDeligenceOther ,updateResponse] = useUpdateDueDeligenceOtherMutation();
  const { data: dueDeligenceData, isLoading } = useGetDueDeligenceOtherByIdQuery(12345);

  const handleSubmit = async (values: any) => {
    try {
      await addDueDeligenceother(values).unwrap();
    } catch (err) {
      console.error("Error saving comp exposure:", err);
    }
  };

  if (isLoading) return <h6>Loading... </h6>;
  return (
    <>
      <div className="wrap-accordian custome-form">
      <Formik
        initialValues= {dueDeligenceData || initialValues}
        onSubmit={handleSubmit}
        validationSchema={validationSchema}
        validateOnChange={false}
        validateOnBlur={true}
       >
       {({ values, setFieldValue }) => (
          <Form>
          <AutoSave debounceMs={2000} />
          <div className="wrap-inner-table">
            <Table sx={{ minWidth: 650 }} aria-label="simple table">
              <TableHead>
                <TableRow>
                  <TableCell><b>Compliance</b></TableCell>
                  <TableCell sx={{ minWidth: 550 }}><b>Comments</b></TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableCell>
                    Banking Arrangement
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                      <TextBoxField name="bankingArrange" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Security Sharing Arrangement with other lenders
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="securityArrange" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    ASM (Agency for Specialized Monitoring)
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="asmDet" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Receivables Audit
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="recvAudit" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell colSpan={2}>
                    <b>Searches in various defaulter lists and other lists </b>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    FATF Country List
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="fateCountryListComm" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Details of Shell Companies(if any)
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="shellCommDet" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Details of Flagged Companies(if any)
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="flaggedCommDet" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Details of Flagged Directors (if any)
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="flaggedDirCommDet" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    High Risk Legal Case check as respondents
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="legalCaseChk" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Domain Check
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="domainChk" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Alerts from EWS
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="ewsAlert" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Alerts from Probe 42/Saverisk
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="probe42SaveRisk" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Foreign investors
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="foreignInvestor" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Due diligence report (under Multiple Banking guidelines)
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="dueDeligenceReport" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Observations in Bank Statements
                    (For A and Below) (Non-Mandatory)
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="bankStmtObserv" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    In case of EV, Green Finance Vertical recommendation
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="greenVerticalRecomm" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Discussion with rating agency
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="ratingAgencyDiscussion" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Discussion with management
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="mgmtDiscussion" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Discussion with bankers
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="bankerDiscussion" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Disclosures as per annual report
                  </TableCell>
                  <TableCell>
                    <FormControl fullWidth>
                    <TextBoxField name="disclouserAnnuReport" label= '' />
                    </FormControl>
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>

          </div>
          </Form>
          )}
        </Formik>
      </div>
    </>
  );
};

export default DueDiligenceOther;

